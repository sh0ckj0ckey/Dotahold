<Page
    x:Class="OpenDota_UWP.Views.DotaHeroesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OpenDota_UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:OpenDota_UWP.Models"
    xmlns:ToolkitUI="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:ToolkitMedia="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:converter="using:OpenDota_UWP.Converters"
    mc:Ignorable="d" NavigationCacheMode="Required">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ThemeResource/ThemeDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="GridViewItem" x:Key="HeroGridViewItemRevealStyle">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="{ThemeResource GridViewItemRevealBorderThemeThickness}" />
                <Setter Property="BorderBrush" Value="{ThemeResource GridViewItemRevealBorderBrush}" />
                <Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}" />
                <Setter Property="TabNavigation" Value="Local" />
                <Setter Property="IsHoldingEnabled" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,4,4" />
                <Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="FocusVisualMargin" Value="-2" />
                <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource GridViewItemFocusVisualPrimaryBrush}" />
                <Setter Property="FocusVisualPrimaryThickness" Value="2" />
                <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource GridViewItemFocusVisualSecondaryBrush}" />
                <Setter Property="FocusVisualSecondaryThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewItem">
                            <Grid x:Name="RootGrid" Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <!--<VisualStateGroup.Transitions>
                                            <VisualTransition From="PointerOver" To="Normal" GeneratedDuration="0:0:0">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="DropShadowHolder" Storyboard.TargetProperty="(AttachedCardShadow.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseIn"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                        <EasingDoubleKeyFrame KeyTime="00:00:0.2" Value="0.2">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="DropShadowHolder" Storyboard.TargetProperty="(AttachedCardShadow.BlurRadius)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="20">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseIn"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                        <EasingDoubleKeyFrame KeyTime="00:00:0.2" Value="10">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentScale" Storyboard.TargetProperty="ScaleX">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1.1">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseIn"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                        <EasingDoubleKeyFrame KeyTime="00:00:0.2" Value="1.0">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentScale" Storyboard.TargetProperty="ScaleY">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1.1">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseIn"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                        <EasingDoubleKeyFrame KeyTime="00:00:0.2" Value="1.0">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>-->

                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentScale" Storyboard.TargetProperty="ScaleX">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1.1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseIn"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:0.3" Value="1.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentScale" Storyboard.TargetProperty="ScaleY">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1.1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseIn"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:0.3" Value="1.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Selected"/>
                                        <VisualState x:Name="PointerOver">
                                            <!--<VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="ContentPresenter.Background" Value="{ThemeResource GridViewItemRevealBackgroundPointerOver}" />
                                            </VisualState.Setters>-->
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropShadowHolder" Storyboard.TargetProperty="(AttachedCardShadow.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.4">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseIn"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:0.3" Value="0.8">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropShadowHolder" Storyboard.TargetProperty="(AttachedCardShadow.BlurRadius)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="10">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseIn"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:0.3" Value="20">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentScale" Storyboard.TargetProperty="ScaleX">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseIn"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:0.3" Value="1.1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentScale" Storyboard.TargetProperty="ScaleY">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseIn"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:0.3" Value="1.1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <!--<VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="ContentPresenter.Background" Value="{ThemeResource GridViewItemRevealBackgroundPointerOver}"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverPressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="ContentPresenter.Background" Value="{ThemeResource GridViewItemRevealBackgroundPointerOverPressed}"/>
                                            </VisualState.Setters>
                                        </VisualState>-->

                                        <!--<VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                --><!--<Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="ContentPresenter.Background" Value="{ThemeResource GridViewItemRevealBackgroundPressed}"/>--><!--
                                                <Setter Target="DropShadowHolder.Opacity" Value="0.5"/>
                                                <Setter Target="DropShadowHolder.BlurRadius" Value="20"/>
                                                <Setter Target="ContentScale.ScaleX" Value="1.0"/>
                                                <Setter Target="ContentScale.ScaleY" Value="1.0"/>
                                            </VisualState.Setters>
                                        </VisualState>-->

                                        <!--<VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(RevealBrush.State)" Value="Pressed"/>
                                            </VisualState.Setters>
                                        </VisualState>-->
                                    </VisualStateGroup>
                                    <!--<VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.RevealBorderThickness" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>-->
                                </VisualStateManager.VisualStateGroups>

                                <Grid Margin="4,4" Background="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.RenderTransform>
                                        <ScaleTransform x:Name="ContentScale" ScaleX="1" ScaleY="1" CenterX="64" CenterY="36"/>
                                    </Grid.RenderTransform>
                                    
                                    <Grid x:Name="ContentHolder">
                                        <ContentPresenter x:Name="ContentPresenter" CornerRadius="0"
                                                          Background="Transparent"
                                                          Content="{TemplateBinding Content}"
                                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          Padding="{TemplateBinding Padding}"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          AutomationProperties.AccessibilityView="Raw" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <DataTemplate x:Key="HeroItemTemplate" x:DataType="model:DotaHeroModel">
                <Grid Width="128" Height="72" Background="Transparent" ToolTipService.ToolTip="{x:Bind localized_name}">
                    <ToolkitUI:Effects.Shadow>
                        <ToolkitMedia:AttachedCardShadow x:Name="DropShadowHolder" BlurRadius="10" Color="Black" Offset="0,0,8" Opacity="0.5"/>
                    </ToolkitUI:Effects.Shadow>
                    <Border x:Name="HeroPhotoImg" Width="128" Height="72">
                        <Border.Background>
                            <ImageBrush Stretch="UniformToFill" ImageSource="{x:Bind ImageSource, Mode=OneWay}"/>
                        </Border.Background>
                    </Border>
                </Grid>
            </DataTemplate>

            <converter:EqualToHeroTabBackgroundConverter x:Key="Eq2BK"/>
            <converter:EqualToHeroTabBorderBrushConverter x:Key="Eq2BD"/>
            <converter:EqualToVisibilityConverter x:Key="Eq2Vis"/>
            <converter:StringLengthToFontSizeConverter x:Key="Str2FS"/>

            <Storyboard x:Name="SlideInStrHeroesStoryboard">
                <DoubleAnimation Storyboard.TargetName="StrHeroesGridViewTranslation" Storyboard.TargetProperty="X" From="-60" To="0" Duration="0:0:1">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase Exponent="12" EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="StrHeroesGridView"
                                 Storyboard.TargetProperty="Opacity"
                                 From="0" To="1" Duration="0:0:0.5"/>
            </Storyboard>

            <Storyboard x:Name="SlideInLeftAgiHeroesStoryboard">
                <DoubleAnimation Storyboard.TargetName="AgiHeroesGridViewTranslation" Storyboard.TargetProperty="X" From="60" To="0" Duration="0:0:1">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase Exponent="12" EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="AgiHeroesGridView"
                                 Storyboard.TargetProperty="Opacity"
                                 From="0" To="1" Duration="0:0:0.5"/>
            </Storyboard>

            <Storyboard x:Name="SlideInRightAgiHeroesStoryboard">
                <DoubleAnimation Storyboard.TargetName="AgiHeroesGridViewTranslation" Storyboard.TargetProperty="X" From="-60" To="0" Duration="0:0:1">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase Exponent="12" EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="AgiHeroesGridView"
                                 Storyboard.TargetProperty="Opacity"
                                 From="0" To="1" Duration="0:0:0.5"/>
            </Storyboard>

            <Storyboard x:Name="SlideInIntHeroesStoryboard">
                <DoubleAnimation Storyboard.TargetName="IntHeroesGridViewTranslation" Storyboard.TargetProperty="X" From="60" To="0" Duration="0:0:1">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase Exponent="12" EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="IntHeroesGridView"
                                 Storyboard.TargetProperty="Opacity"
                                 From="0" To="1" Duration="0:0:0.5"/>
            </Storyboard>
        </ResourceDictionary>
    </Page.Resources>
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition x:Name="navigationTransition">
                <EntranceNavigationTransitionInfo />
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Grid Background="{ThemeResource APPLICATION_BK}">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="64"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="24,0,0,0"
                   Text="Heroes" FontFamily="/Fonts/Reaver-Bold.ttf#Reaver" FontSize="28" CharacterSpacing="40"/>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button Width="164" Height="34" BorderThickness="0,0,0,2" 
                    BorderBrush="{x:Bind ViewModel.iHeroAttrTabIndex,Converter={StaticResource Eq2BD},ConverterParameter=0,Mode=OneWay}"
                    Background="{ThemeResource HEROTAB_BTN_BK}" Style="{StaticResource ButtonRevealStyle}"
                    Margin="16,0,6,0"
                    CornerRadius="14"
                    Click="Button_Click">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Source="{ThemeResource HERO_TAB_STR_IMG}" Height="23" VerticalAlignment="Center" Margin="0,0,0,-3"/>
                    <TextBlock x:Name="StrTextBlock" Text="STRENGTH" VerticalAlignment="Center" Margin="6,0,0,-1" CharacterSpacing="40" FontWeight="Medium"/>
                </StackPanel>
            </Button>
            <Button Width="164" Height="34" BorderThickness="0,0,0,2" 
                    BorderBrush="{x:Bind ViewModel.iHeroAttrTabIndex,Converter={StaticResource Eq2BD},ConverterParameter=1,Mode=OneWay}"
                    Background="{ThemeResource HEROTAB_BTN_BK}" Style="{StaticResource ButtonRevealStyle}"
                    Margin="6,0"
                    CornerRadius="14"
                    Click="Button_Click_1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Source="{ThemeResource HERO_TAB_AGI_IMG}" Height="23" VerticalAlignment="Center" Margin="0,0,0,-3"/>
                    <TextBlock x:Name="AgiTextBlock" Text="AGILITY" VerticalAlignment="Center" Margin="6,0,0,-1" CharacterSpacing="40" FontWeight="Medium"/>
                </StackPanel>
            </Button>
            <Button Width="164" Height="34" BorderThickness="0,0,0,2"
                    BorderBrush="{x:Bind ViewModel.iHeroAttrTabIndex,Converter={StaticResource Eq2BD},ConverterParameter=2,Mode=OneWay}"
                    Background="{ThemeResource HEROTAB_BTN_BK}" Style="{StaticResource ButtonRevealStyle}"
                    Margin="6,0,16,0"
                    CornerRadius="14"
                    Click="Button_Click_2">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Source="{ThemeResource HERO_TAB_INT_IMG}" Height="23" VerticalAlignment="Center" Margin="0,0,0,-3"/>
                    <TextBlock x:Name="IntTextBlock" Text="INTELLIGENCE" VerticalAlignment="Center" Margin="6,0,0,-1" CharacterSpacing="40" FontWeight="Medium"/>
                </StackPanel>
            </Button>
        </StackPanel>
        <GridView x:Name="StrHeroesGridView" Grid.Row="2" Visibility="{x:Bind ViewModel.iHeroAttrTabIndex,Converter={StaticResource Eq2Vis},ConverterParameter=0,Mode=OneWay}"
                  SelectionMode="None"
                  IsItemClickEnabled="True"
                  ItemsSource="{x:Bind ViewModel.vStrHeroesList}"
                  ItemTemplate="{StaticResource HeroItemTemplate}" 
                  ItemContainerStyle="{StaticResource HeroGridViewItemRevealStyle}"
                  Padding="20,12" ItemClick="GridView_ItemClick" Loaded="GridView_Loaded">
            <GridView.ItemContainerTransitions>
                <TransitionCollection>
                    <AddDeleteThemeTransition />
                </TransitionCollection>
            </GridView.ItemContainerTransitions>
            <GridView.RenderTransform>
                <TranslateTransform x:Name="StrHeroesGridViewTranslation"/>
            </GridView.RenderTransform>
        </GridView>
        <GridView x:Name="AgiHeroesGridView" Grid.Row="2" Visibility="{x:Bind ViewModel.iHeroAttrTabIndex,Converter={StaticResource Eq2Vis},ConverterParameter=1,Mode=OneWay}"
                  SelectionMode="None"
                  IsItemClickEnabled="True"
                  ItemsSource="{x:Bind ViewModel.vAgiHeroesList}"
                  ItemContainerStyle="{StaticResource HeroGridViewItemRevealStyle}"
                  ItemTemplate="{StaticResource HeroItemTemplate}" Padding="20,12"
                  ItemClick="GridView_ItemClick" Loaded="GridView_Loaded_1">
            <GridView.ItemContainerTransitions>
                <TransitionCollection>
                    <AddDeleteThemeTransition />
                </TransitionCollection>
            </GridView.ItemContainerTransitions>
            <GridView.RenderTransform>
                <TranslateTransform x:Name="AgiHeroesGridViewTranslation"/>
            </GridView.RenderTransform>
        </GridView>
        <GridView x:Name="IntHeroesGridView" Grid.Row="2" Visibility="{x:Bind ViewModel.iHeroAttrTabIndex,Converter={StaticResource Eq2Vis},ConverterParameter=2,Mode=OneWay}"
                  SelectionMode="None"
                  IsItemClickEnabled="True"
                  ItemsSource="{x:Bind ViewModel.vIntHeroesList}"
                  ItemContainerStyle="{StaticResource HeroGridViewItemRevealStyle}"
                  ItemTemplate="{StaticResource HeroItemTemplate}" Padding="20,12"
                  ItemClick="GridView_ItemClick" Loaded="GridView_Loaded_2">
            <GridView.ItemContainerTransitions>
                <TransitionCollection>
                    <AddDeleteThemeTransition />
                </TransitionCollection>
            </GridView.ItemContainerTransitions>
            <GridView.RenderTransform>
                <TranslateTransform x:Name="IntHeroesGridViewTranslation"/>
            </GridView.RenderTransform>
        </GridView>
        <Grid Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"
              Height="72" Width="128" CornerRadius="6" Margin="0,-80,0,0"
              Visibility="{x:Bind ViewModel.bLoadingHeroes,Mode=OneWay}">
            <Grid.Background>
                <AcrylicBrush BackgroundSource="Backdrop" FallbackColor="{ThemeResource APPLICATION_BK}" TintColor="Transparent" />
            </Grid.Background>
            <ProgressRing x:Name="ItemProgressRing"
                          Height="32" Width="32" Foreground="{ThemeResource SIMPLETEXT_FR}"
                          IsActive="{x:Bind ViewModel.bLoadingHeroes,Mode=OneWay}"/>
        </Grid>
    </Grid>
</Page>
